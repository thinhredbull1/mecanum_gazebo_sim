
TebLocalPlannerROS:

  odom_topic: /odom
  #odom_topic: /rtabmap/odom
  map_frame: map
  # robot_type: "omnidirectional" 
  # Trajectory
    
  teb_autosize: True
  dt_ref: 0.25 #0.2
  dt_hysteresis: 0.1
  global_plan_overwrite_orientation: False
  max_global_plan_lookahead_dist: 3.0
  feasibility_check_no_poses: 5
  global_plan_prune_distance: 0.2
  # Robot
  max_vel_y: 0.5
  max_vel_y_backwards: 0.25
  acc_lim_y: 1.0
  max_vel_x: 0.5 #0.25 
  max_vel_x_backwards: 0.25 #0.2
  max_vel_theta: 1.25 #0.5
  acc_lim_x: 1.0 # 0.2
  acc_lim_theta: 0.65 #0.5, 0.26
  min_turning_radius: 0.0
  footprint_model: # types: "point", "circular", "two_circles", "line", "polygon"
    type: "polygon" #"circular" 
    radius: 0.38 # for type "circular"
    #line_start: [-0.3, 0.0] # for type "line"
    #line_end: [0.3, 0.0] # for type "line"
    #front_offset: 0.2 # for type "two_circles"
    #front_radius: 0.2 # for type "two_circles"
    #rear_offset: 0.2 # for type "two_circles"
    #rear_radius: 0.2 # for type "two_circles"
    vertices: [[-0.117, -0.1], [-0.117, 0.1], [0.117, 0.1], [0.117, -0.1]]  # for type "polygon"

  # GoalTolerance
      
  xy_goal_tolerance: 0.2 #0.2
  yaw_goal_tolerance: 0.1571
  free_goal_vel: false
  allow_init_with_backwards_motion: True
  # Obstacles
      
  min_obstacle_dist: 0.2
  inflation_dist: 0.0
  dynamic_obstacle_inflation_dist: 0.15
  include_costmap_obstacles: True
  costmap_obstacles_behind_robot_dist: 0.1
  obstacle_poses_affected: 35 #30
  costmap_converter_plugin: ""
  costmap_converter_spin_thread: True
  costmap_converter_rate: 5

  # Optimization
      
  no_inner_iterations: 5 #5
  no_outer_iterations: 4 #4
  optimization_activate: True
  optimization_verbose: False
  penalty_epsilon: 0.05
  weight_max_vel_x: 2 #2
  weight_max_vel_theta: 1 #1
  weight_max_vel_y: 1.5 #2
  weight_acc_lim_y: 1.5 #1
  weight_acc_lim_x: 1 # 1
  weight_acc_lim_theta: 1 # 1
  weight_kinematics_nh: 0 #1000
  weight_kinematics_forward_drive: 0 #1000
  weight_kinematics_turning_radius: 0 #1 #only for car-like robots
  weight_optimaltime: 1.0 #1
  weight_obstacle: 50 #50
  weight_viapoint: 5.0 #5.0 #1.0
  weight_inflation: 0.2 #0.1
  weight_dynamic_obstacle: 20 # not in use yet
  selection_alternative_time_cost: False # not in use yet
  ####
  ####
  #### optimize
  obstacle_cost_exponent: 1.5
  # Homotopy Class Planner

  enable_homotopy_class_planning: True #True
  enable_multithreading: True
  simple_exploration: False
  max_number_classes: 2 #4
  roadmap_graph_no_samples: 15
  roadmap_graph_area_width: 5
  h_signature_prescaler: 0.5
  h_signature_threshold: 0.1
  obstacle_keypoint_offset: 0.1
  obstacle_heading_threshold: 0.45
  visualize_hc_graph: False

  #ViaPoints
  global_plan_viapoint_sep: 0.25 #negative if none
  via_points_ordered: False #adhere to order of via points

  #Feedback
  publish_feedback: True #false
DWAPlannerROS:
  # for details see: https://wiki.ros.org/dwa_local_planner
  odom_topic: odom

# Robot Configuration Parameters
  max_vel_x: 0.6
  min_vel_x: -0.6

  max_vel_y: 0.6           # 0 for non-holonomic robot
  min_vel_y: -0.6            # 0 for non-holonomic robot

# The velocity when robot is moving in a straight line
  max_vel_trans:  0.6
  min_vel_trans:  0.2

  max_vel_theta: 1.0
  min_vel_theta: 0.5

  acc_lim_x: 1.0
  acc_lim_y: 1.0
  acc_lim_theta: 2.0 

# Goal Tolerance Parametes
  xy_goal_tolerance: 0.15
  yaw_goal_tolerance: 0.2
  latch_xy_goal_tolerance: false
  
# Forward Simulation Parameters
  sim_time: 1.2                  # The amount of time to forward-simulate trajectories in seconds
  sim_granularity: 0.02          # The step size, in meters, to take between points on a given trajectory
  vx_samples: 15                   # The number of samples to use when exploring the x velocity space
  vy_samples: 15                    # The number of samples to use when exploring the y velocity space
  vtheta_samples: 20           # The number of samples to use when exploring the theta velocity space
  controller_frequency: 5.0       # The frequency at which this controller will be called in Hz

# Trajectory Scoring Parameters
  path_distance_bias: 30.5         # The weighting for how much the controller should stay close to the path it was given 
  goal_distance_bias: 18.8         # The weighting for how much the controller should attempt to reach its local goal, also controls speed
  occdist_scale: 0.025         # The weighting for how much the controller should attempt to avoid obstacles
  forward_point_distance: 0.325    # The distance from the center point of the robot to place an additional scoring point, in meters
  stop_time_buffer: 0.2            # The amount of time that the robot must stop before a collision in order for a trajectory to be considered valid in seconds
  scaling_speed: 0.25              # The absolute value of the velocity at which to start scaling the robot's footprint, in m/s
  max_scaling_factor: 0.2          # The maximum factor to scale the robot's footprint by

# Oscillation Prevention Parameters
  oscillation_reset_dist: 0.05    # How far the robot must travel in meters before oscillation flags are reset

# Debugging
  publish_traj_pc : true
NeoLocalPlanner:

  # The x acceleration limit of the robot in meters/sec^2
  acc_lim_x: 0.3

  emergency_acc_lim_x: 1

  # The rotational acceleration limit of the robot in radians/sec^2
  acc_lim_theta: 1

  # The maximum x velocity for the robot in m/s.
  max_vel_x: 1

  # The minimum x velocity for the robot in m/s, negative for backwards motion.
  min_vel_x: 0

  # The maximum y velocity for the robot in m/s
  max_vel_y : 0.0

  # The minimum y velocity for the robot in m/s
  min_vel_y : -0.0

  # The absolute value of the maximum rotational velocity for the robot in rad/s
  max_rot_vel: 0.6

  # The absolute value of the minimum rotational velocity for the robot in rad/s
  min_rot_vel: 0.1

  # The absolute value of the maximum translational velocity for the robot in m/s
  max_trans_vel: 1

  # The absolute value of the minimum translational velocity for the robot in m/s
  min_trans_vel: 0.1

  # The tolerance in radians for the controller in yaw/rotation when achieving its goal
  yaw_goal_tolerance: 0.1

  # The tolerance in meters for the controller in the x & y distance when achieving a goal
  xy_goal_tolerance: 0.2

  # How long to fine tune for goal position after reaching tolerance limits [s]
  goal_tune_time: 0.0


  # How far to predict control pose into the future based on latest odometry [s]
  lookahead_time: 0.5

  # How far to look ahead when computing path orientation [m]
  lookahead_dist: 0.5

  # Threshold yaw error below which we consider to start moving [rad]
  start_yaw_error_normal: 0.8

  start_yaw_error_when_safety: 0.3

  # Gain when adjusting final x position for goal [1/s]
  pos_x_gain: 1
  pos_y_gain: 2

  # Gain for lane keeping based on y error (differential only) [rad/s^2]
  pos_y_yaw_gain: 1

  # Gain for lane keeping based on yaw error (differential only) [1/s]
  yaw_gain: 2

  # Gain for adjusting yaw when not translating, or in case of holonomic drive  [1/s]
  static_yaw_gain: 3

  # Gain for y cost avoidance (differential only)
  cost_y_yaw_gain: 0.2

  # How far ahead to compute y cost gradient (constant offset) [m]
  cost_y_lookahead_dist: 0.0

  # How far ahead to compute y cost gradient (dynamic offset) [s]
  cost_y_lookahead_time: 0.0

  # Gain for x cost avoidance (holonomic only)
  cost_x_gain : 0.3

  # Gain for y cost avoidance (holonomic only)
  cost_y_gain : 0.0

  # Gain for yaw cost avoidance
  cost_yaw_gain: 2

  # Gain for final control low pass filter
  low_pass_gain: 0.2

  # Max cost to allow, above we slow down to min_trans_vel or even stop
  max_cost: 0.95

  # Max velocity based on curvature [rad/s]
  max_curve_vel: 0.3

  # Max distance to goal when looking for it [m]
  max_goal_dist: 0.4

  # Max distance allowable for backing up (zero = unlimited) [m]
  max_backup_dist: 0.1

  # Minimal distance for stopping [m]
  min_stop_dist: 0.2

  # If robot has differential drive, holonomic otherwise
  differential_drive: true

  min_dist_obstacle_allow_rotation: 0.5

  print_state: true

  # Safety config
  vel_max_safety_field_0: 0

  vel_max_safety_field_1: 0

  vel_max_safety_field_2: 0.3

  vel_max_safety_field_3: 0.5

  max_time_check_stop_by_safety: 1
  allow_reversing: true
EBandPlannerROS:
  # Robot configuration
  max_vel_lin: 0.8                                  # choose slightly less than the base's capability
  min_vel_lin: 0.1                                  # this is the min trans velocity when there is negligible rotational velocity
  trans_stopped_vel: 0.03

  max_vel_th: 1.0                                   # choose slightly less than the base's capability
  min_vel_th: 0.1                                   # this is the min angular velocity when there is negligible translational velocity
  rot_stopped_vel: 0.1

  min_in_place_vel_th: 0.1                          # Minimum in-place angular velocity
  in_place_trans_vel: 0.0                           # Minimum in place linear velocity

  max_acceleration: 1.5                             # Maximum allowable acceleration
  max_translational_acceleration: 1.5               # Maximum linear acceleration
  max_rotational_acceleration: 2.0                  # Maximum angular acceleration

  # Goal tolerance
  yaw_goal_tolerance: 0.1                          # yaw_goal_tolerance > (sim_time * min_rot_vel) / 2 (from Navigation Tuning Guide)
  xy_goal_tolerance: 0.2                           # xy_goal_tolerance  > (sim_time * min_vel_x)   / 2

  # Elastic Band Parameters
  eband_min_relative_overlap: 0.7                   # Min distance that denotes connectivity between consecutive bubbles
  eband_tiny_bubble_distance: 0.01                  # Bubble geometric bound regarding tiny bubble distance
  eband_tiny_bubble_expansion: 0.01                 # Bubble geometric bound regarding tiny bubble expansion
  eband_internal_force_gain: 1.0                    # Force gain of forces between consecutive bubbles that tend to stretch the elastic band
  eband_external_force_gain: 2.0                    # Force gain of forces that tend to move the bubbles away from obstacles
  num_iterations_eband_optimization: 3              # Number of iterations for eband optimization
  eband_equilibrium_approx_max_recursion_depth: 4   # Number of iterations for reaching the equilibrium between internal and external forces
  eband_equilibrium_relative_overshoot: 0.75        # Maximum relative equlibrium overshoot
  eband_significant_force_lower_bound: 0.15         # Minimum magnitude of force that is considered significant and used in the calculations
  costmap_weight: 10.0                              # Costmap weight factor used in the calculation of distance to obstacles

  # Trajectory Controller Parameters
  k_prop: 4.0                                       # Proportional gain of the PID controller
  k_damp: 3.5                                       # Damping gain of the PID controller
  Ctrl_Rate: 10.0                                   # Control rate
  virtual_mass: 0.75                                # Virtual mass
  rotation_correction_threshold: 0.5                # Rotation correction threshold
  differential_drive: False                          # Denotes whether to use the differential drive mode
  bubble_velocity_multiplier: 2.0                   # Multiplier of bubble radius
  rotation_threshold_multiplier: 1.0                # Multiplier of rotation threshold
  disallow_hysteresis: False                        # Determines whether to try getting closer to the goal, in case of going past the tolerance